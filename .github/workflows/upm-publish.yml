name: Publish UPM Package

# Controls when the workflow will run
on:
  pull_request:
    branches:
      - main
    types: [closed]
    
  workflow_dispatch:
    inputs:
      run_manually:
        description: 'Run Manually'     
        required: true
        default: true
        type: boolean

jobs:
 prepare:
    name: Prepare
    if: ${{ inputs.run_manually }} || github.event.pull_request.merged == true
    runs-on: ubuntu-latest    
    steps:
    - name: Set the original string
      id: setOriginalString
      run: echo "{{ github.event.repository.name }}"

    - name: Convert string
      id: convertString
      run: |
        ORIGINAL_STRING="${{ steps.setOriginalString.outputs.originalString }}"
        IFS='-' read -ra PARTS <<< "$ORIGINAL_STRING"
        RESULT=""
        for PART in "${PARTS[@]}"; do
          RESULT="${RESULT}$(echo "${PART^}")"
        done
        echo "::set-output name=convertedString::${RESULT}"
        
    - uses: actions/checkout@master
    - name: Copy the README
      run: |
          cp "README.md" "Assets/${{ steps.convertString.outputs.convertedString }}/README.md"
    - name: Copy the LICENSE
      run: |
          cp "LICENSE" "Assets/${{ steps.convertString.outputs.convertedString }}/LICENSE"
    - name: Verify Changed files
      uses: tj-actions/verify-changed-files@v11.1
      id: verify-changed-files
      with:
        files: |
             **/README.md
             **/LICENSE
    - name: Commit files
      if: steps.verify-changed-files.outputs.files_changed == 'true'
      run: |
        git config --local user.email ${{secrets.ADMIN_MAIL}}
        git config --local user.name ${{secrets.ADMIN_NAME}}
        git add .
        git commit -m "Update README.md and LICENSE" -a
    - name: Push changes
      if: steps.verify-changed-files.outputs.files_changed == 'true'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

 deploy:
    name: Deploy
    if: ${{ success() }}
    needs: prepare
    runs-on: ubuntu-latest
    steps:
    # Any prerequisite steps
    - name: Checkout latest
      uses: actions/checkout@v3
      with: 
        fetch-depth: 0
        ref: main
        lfs: true

    # Deploy to local repo
    - name: Deploy
      uses: s0/git-publish-subdir-action@develop
      env:
        REPO: self
        BRANCH: upm
        FOLDER: Assets/${{ github.event.repository.name }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SKIP_EMPTY_COMMITS: true
        MESSAGE: "{msg}"
